---
name: CD Pipeline new
# Provisions an EKS cluster and deploys (or updates) the Kubernetes manifests on EKS automatically.

run-name: ${{ github.actor }} is Deploying ðŸš€
on:
  workflow_run:
    workflows:
      - CI Pipeline new
    types:
      - completed


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
        # We need to:
            # 0. clone repository into the Github runner
            # 1. configure aws cli
            # 2. install kubectl
            # 3. install helm
            # 4. deploy kubernetes statefulsets for redis and postgres and other resources
            # 5. deploy vote, worker and result microservices via Helm charts to EKS
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
          

        - name: Install kubectl & update kubeconfig for EKS 
          run: |
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.0/2024-12-20/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
            aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}
        
        - name: install helm
          uses: azure/setup-helm@v3
          with:
            version: v3.17.2

        - name: Deploy redis, postgres and ingress to EKS
          run: |
            kubectl apply -f k8s/

        - name: Deploy microservices to EKS using helm
          run: |
            helm upgrade --install microservices-release ./microservices-chart --debug \
              --namespace default
        
        - name: Deploy Microservice Vote
          run: |
            helm upgrade --install vote ./microservices-chart \
              -f values.yaml \
              --set microserviceVote.enabled=true \
              --set microserviceWorker.enabled=false \
              --set microserviceResult.enabled=false \
              --atomic --wait --timeout 5m

        - name: Deploy Microservice Worker
          run: |
            helm upgrade --install worker ./microservices-chart \
              -f values.yaml \
              --set microserviceVote.enabled=false \
              --set microserviceWorker.enabled=true \
              --set microserviceResult.enabled=false \
              --atomic --wait --timeout 5m

        - name: Deploy Microservice Result
          run: |
            helm upgrade --install result ./microservices-chart \
              -f values.yaml \
              --set microserviceVote.enabled=false \
              --set microserviceWorker.enabled=false \
              --set microserviceResult.enabled=true \
              --atomic --wait --timeout 5m