---
name: CD Pipeline
# Provisions an EKS cluster and deploys (or updates) the Kubernetes manifests on EKS automatically.

run-name: ${{ github.actor }} is Deploying ðŸš€
on:
  workflow_run:
    workflows:
      - CI Pipeline
    types:
      - completed


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
        # We need to:
            # 0. clone repository into the Github runner
            # 1. configure aws cli
            # 2. install kubectl
            # 3. deploy kubernetes manifests and ingress resource for the microservices
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
          

        - name: Install kubectl & update kubeconfig for EKS 
          run: |
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.0/2024-12-20/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
            aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

        - name: Generate the final deployment templates
          run: |
            sudo apt-get update
            sudo apt-get install -y gettext-base

        - name: Define image names for vote, result and worker service
         # use environment variable env.IMAGE_TAG from corresponding deployments for image tag
          run: |
            echo "Image tag: ${{ env.IMAGE_TAG }}"
            export VOTE_IMAGE="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/voting-app-vote:${{ env.IMAGE_TAG }}"
            export RESULT_IMAGE="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/voting-app-result:${{ env.IMAGE_TAG }}"
            export WORKER_IMAGE="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/voting-app-worker:${{ env.IMAGE_TAG }}"
          #envsubst < deployment.template.yaml > deployment.yaml

        - name: Replace placeholders in deployment templates
          run: |  
            envsubst < k8s/vote.template.yaml > k8s/vote.yaml
            envsubst < k8s/result.template.yaml > k8s/result.yaml
            envsubst < k8s/worker.template.yaml > k8s/worker.yaml
            echo "Final vote deployment:"
            cat k8s/vote.yaml

        - name: Deploy all manifests to EKS
          run: |
            kubectl apply -f k8s/
        